# This is a Docker Compose configuration for local use.
# In production use docker-compose.prod.yaml

# Run all services:
# docker compose up --build --detach

services:
  bot:
    build:
      context: .
      dockerfile: bot.Dockerfile
    depends_on:
      - api
      - redis # Wait for the database to be ready before starting the application
    restart: always
    volumes:
      - "./settings.yaml:/code/settings.yaml:ro" # Read-only settings file
    environment:
      - TZ=Europe/Moscow # Set the timezone for correct calendar image generation

  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    depends_on:
      db:
        # Wait for the database to be ready before starting the application
        condition: service_healthy
    restart: always
    ports:
      - "8001:8000"
    volumes:
      - "./settings.yaml:/code/settings.yaml:ro" # Read-only settings file
    env_file: .env # You can specify some Uvicorn settings in .env file
    environment:
      - TZ=Europe/Moscow # Set the timezone for correct calendar image generation

  db:
    # See more: https://hub.docker.com/_/postgres
    image: "postgres:16.0"
    restart: always
    # The commits were slow on our servers, so we turned off the synchronous_commit
    command: postgres -c synchronous_commit=off
    volumes:
      - "postgres:/var/lib/postgresql/data"
    ports:
      - "5433:5432"
    env_file: .env # Set POSTGRES_PASSWORD in .env file
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    # See more: https://hub.docker.com/_/redis
    image: "redis:7.2.4-alpine"
    restart: always
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    volumes:
      - "redis:/data"
      - "./redis/redis.conf:/usr/local/etc/redis/redis.conf"
    ports:
      - "6379:6379"

volumes:
  postgres:
  redis:
